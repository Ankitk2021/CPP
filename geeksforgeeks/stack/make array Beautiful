#1 Naive
vector<int> makeBeautiful(vector<int> arr) {
        // code here
        if(arr.size() == 0 ) return arr;
        
        stack<int> stk;
        
        for(int x : arr){
            
            
            if(stk.empty()){
                
                stk.push(x);
            }else{
                
                
                int top = stk.top();
                
                if((top >= 0 && x >= 0) || (top < 0 && x < 0)){
                    
                    stk.push(x);
                }else{
                    stk.pop();
                }
            }
        }
        
        arr.clear();
        
        
        
        while(!stk.empty()){
            
            arr.push_back(stk.top());
            
            stk.pop();
        }
        reverse(arr.begin(),arr.end());
        
        return arr;
      
    }


#2 Better

    vector<int> makeBeautiful(vector<int> arr) {
        // code here
        if(arr.size() == 0 ) return arr;
        
        stack<int> stk;
        
        for(int x : arr){
            
            
            if(stk.empty()){
                
                stk.push(x);
            }else{
                
                
                int top = stk.top();
                
                if((top >= 0 && x >= 0) || (top < 0 && x < 0)){
                    
                    stk.push(x);
                }else{
                    stk.pop();
                }
            }
        }
        
        arr.resize(stk.size());
        
        
        int i = arr.size()-1;
        
        while( !stk.empty()  && i >= 0){
            
            arr[i] = stk.top();
            
            stk.pop();
            i--;
        }
        

        return arr;
      
    }
